üéØ Replit One-Shot Implementation Prompt

Context & Objective:
You‚Äôre enhancing the existing Call & Transcript Review feature within Eloquas on Replit. The existing feature (built with JavaScript, Python, Flask) already ingests text transcripts. Your objective is to update and improve it significantly by integrating GPT-4 Turbo (optimal balance of performance and cost efficiency) and adding advanced analytics such as categorized action items, call grading, sentiment, and preliminary tone inference.

‚∏ª

‚úÖ Functionality Overview:

Current Feature:
	‚Ä¢	Existing Call & Transcript grading/analysis section built with Flask, JavaScript frontend.
	‚Ä¢	Basic text ingestion already configured.

Enhanced Feature Goals:
	1.	Transcript Analysis (via GPT-4 Turbo):
	‚Ä¢	Categorize action items (Follow-up, CRM entry, Documentation, Schedule demo).
	‚Ä¢	Generate call summary insights.
	‚Ä¢	Grade calls on:
	‚Ä¢	Rapport/trust-building
	‚Ä¢	Discovery question depth
	‚Ä¢	Tone match and succinctness
	‚Ä¢	Storytelling effectiveness
	‚Ä¢	Sentiment and urgency analysis.
	2.	Preliminary Tone and Talk-Time Estimation:
	‚Ä¢	Attempt to infer speaker tone and urgency from text (beta functionality).
	‚Ä¢	Estimate talk-time distribution (as a beta, text-based inference).
	3.	Webhook Integration:
	‚Ä¢	Utilize existing webhook (Plot) stored in Replit secrets (PLOT_WEBHOOK_ID).
	‚Ä¢	Confirm ingestion via Plot webhook is operational.
	4.	Output Format (Web UI):
	‚Ä¢	Categorized action items clearly listed.
	‚Ä¢	Call grading presented as simple scorecards (numeric and color-coded).
	‚Ä¢	Sentiment & urgency visualizations (basic charts, badges, or tags).
	‚Ä¢	Inferred talk-time shown as percentage or ratio (beta).

‚∏ª

üìÇ Technical Architecture & Integrations:
	‚Ä¢	Backend: Flask (Python)
	‚Ä¢	OpenAI API integration (GPT-4 Turbo, optimize prompt tokens for cost-efficiency)
	‚Ä¢	Plot webhook integration (secret-based ingestion)
	‚Ä¢	Frontend: JavaScript-based UI (existing framework)
	‚Ä¢	Minimal modifications for new scorecard display, action item categorization, tone indicators
	‚Ä¢	Existing Data Handling:
	‚Ä¢	Keep existing transcript upload/file handling mechanisms intact.
	‚Ä¢	Ensure backward compatibility with existing data structure.

‚∏ª

üö© Implementation Instructions:
	‚Ä¢	Update existing Flask route handling transcript ingestion:
	‚Ä¢	Integrate GPT-4 Turbo analysis logic with a clearly defined API prompt (outlined below).
	‚Ä¢	Include handling for Plot webhook ingestion (PLOT_WEBHOOK_ID).
	‚Ä¢	GPT-4 Turbo Prompt Structure (use verbatim for API call):

Analyze the provided call transcript. Generate the following structured JSON output:
{
  "summary": "Brief, actionable summary (50-80 words)",
  "action_items": [
    {"category": "Follow-up | CRM Entry | Documentation | Demo Scheduling", "task": "Brief description of action", "urgency": "High | Medium | Low"}
  ],
  "call_grade": {
    "rapport_trust": "1-10",
    "discovery_depth": "1-10",
    "tone_match_succinctness": "1-10",
    "storytelling": "1-10",
    "overall_score": "Average of above criteria"
  },
  "sentiment_analysis": {
    "overall_sentiment": "Positive | Neutral | Negative",
    "urgency_detected": "High | Medium | Low"
  },
  "talk_time_estimation": {
    "rep_percentage": "Estimated % of total speaking",
    "prospect_percentage": "Estimated % of total speaking"
  }
}


	‚Ä¢	Frontend UI Modifications:
	‚Ä¢	Create clear visual sections: Action Items, Call Grades, Sentiment Analysis, and Talk-Time Estimation.
	‚Ä¢	Utilize existing UI patterns for consistency (minimal design adjustments required).

‚∏ª

üö¶Next Steps (After Initial Deployment):
	‚Ä¢	Confirm successful Plot webhook integration.
	‚Ä¢	Monitor GPT-4 Turbo usage for cost-efficiency.
	‚Ä¢	Validate accuracy of beta ‚Äútone & talk-time‚Äù features and iterate based on user feedback.
	‚Ä¢	Prepare for future integration with Chorus/Plaud APIs for audio/video analysis.

‚∏ª

Ensure this implementation replaces the existing ‚ÄúCall & Transcript grading‚Äù section directly without creating redundancy or unnecessary new components.